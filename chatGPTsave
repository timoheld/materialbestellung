from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField, FieldList, FormField
from wtforms.validators import DataRequired
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///example.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

class Item(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(50))

class FormItem(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    item_id = db.Column(db.Integer, db.ForeignKey('item.id'))
    value = db.Column(db.String(50))


class ItemForm(FlaskForm):
    name = StringField('Name', validators=[DataRequired()])
    submit = SubmitField('Add Item')

class DynamicForm(FlaskForm):
    items = FieldList(FormField(ItemForm), min_entries=1)
    submit = SubmitField('Save Items')


@app.route('/', methods=['GET', 'POST'])
def index():
    form = DynamicForm()
    if form.validate_on_submit():
        for item_form in form.items:
            item = Item(name=item_form.name.data)
            db.session.add(item)
            db.session.flush()
            form_item = FormItem(item_id=item.id, value=item_form.name.data)
            db.session.add(form_item)
        db.session.commit()
        flash('Items saved successfully!')
        return redirect(url_for('index'))
    return render_template('index.html', form=form)


<form method="POST" action="/">
    {{ form.hidden_tag() }}
    <div id="items">
        {% for item_form in form.items %}
        <div class="item">
            {{ item_form.name.label }} {{ item_form.name() }}
        </div>
        {% endfor %}
